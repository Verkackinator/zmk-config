/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h> 

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Z  | U/Ü  |  I  | O/Ö |  P/ß  | BACKSP |
// | TAB  | A/Ä |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ö  |   Ä    |
// | CTRL |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  Ü  |  ALT   |
//                    | GUI | SPC | MAT |   | SDR | SHFT | RET |
                        bindings = <
   &kp ESC   &kp Q     &kp W &kp E &kp R &kp T   &kp Y &mt LBKT U  &kp I     &mt SEMI O   &mt MINUS P    &mt LA(BSPC) BSPC 
   &kp TAB   &mt SQT A &kp S &kp D &kp F &kp G   &kp H &kp J       &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z     &kp X &kp C &kp V &kp B   &kp N &kp M       &kp COMMA &kp DOT &kp LBKT &kp LALT
                  &kp LGUI &kp SPACE &mo 1   &mo 2 &kp LSHFT &mt LS(RET) RET
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |     | LTAB |  UP | RTAB |     |   |  7  |   8  |  9  |  /  |  *  | BKSP |
// |  TAB |     |  LFT | DWN |  RGT |     |   |  4  |   5  |  6  |  -  |  +  |   $  |
// | CTRL |     |      |     |      |     |   |  1  |   2  |  3  |  .  |  =  | ALT  | 
//                    | GUI | SPC   | --- |   |  0  | SHFT |  ,  |
                        bindings = <
   &kp ESC    &none    &kp LC(LS(TAB)) &kp UP    &kp LC(TAB) &none         &kp N7   &kp N8   &kp N9 &kp LS(N7)  &kp LS(RBKT) &mt LA(BSPC) BSPC 
   &kp TAB    &none    &kp LEFT        &kp DOWN  &kp RIGHT   &none         &kp N4   &kp N5   &kp N6 &kp FSLH    &kp RBKT     &kp LS(N4)
   &kp LCTRL  &none    &none           &none     &none       &none         &kp N1   &kp N2   &kp N3 &kp DOT     &kp LS(N0)   &kp LALT
                          	        &kp LGUI  &kp SPACE   &none         &kp N0   &kp LSHFT  &kp COMMA
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC   |  !  |  ?  |  "  |      |     |   |  [  |  ]  |  <  |  >  |  ß  | BKSP |
// | TAB    |     |     |     |      |     |   |  (  |  )  |  /  |  \  |  #  |      |
// | BT_CLR | BT0 | BT1 | BT2 | BT3  | BT4 |   |  {  |  }  |     |     | "|" |      |
//                    | GUI |     | SPC |   |  | SHFT| RET |
                        bindings = <
   &kp ESC    &kp LS(N1)   &kp LS(MINUS) &kp LS(N2)     &kp DLLR     &kp PRCNT    &kp RA(N5) &kp RA(N6) &kp GRAVE  &kp TILDE       &kp MINUS     &mt LA(BSPC) BSPC
   &kp TAB    &kp RA(Q)    &trans        &trans         &trans       &trans       &kp LS(N8) &kp LS(N9) &kp LS(N7) &kp LS(RA(N7))  &kp BSLH      &kp LS(BSLH)
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3 &bt BT_SEL 4 &kp RA(N8) &kp RA(N9) &kp LBRC   &kp RBRC        &kp PIPE      &kp TILDE
                    	     &kp LGUI     &kp SPACE      &trans       &trans      &kp LSHFT &kp RET
                        >;
                };
        } ;
};