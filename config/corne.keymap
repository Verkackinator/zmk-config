/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h> 

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LG(C)> , <&kp  LG(X)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &td0
            >;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  | P/ß | BACKSP   |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ö  |   Ä      |
// | CTRL |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  Ü  |  LALT    |
//                    | GUI | SPC | MAT |   | SDR | SHFT | RET |
                        bindings = <
   &kp ESC   &kp Q     &kp W &kp E &kp R &kp T   &kp Y &kp U       &kp I     &kp O   &mt MINUS P    &mt LA(BSPC) BSPC 
   &kp TAB   &kp A     &kp S &kp D &kp F &kp G   &kp H &kp J       &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z     &kp X &kp C &kp V &kp B   &kp N &kp M       &kp COMMA &kp DOT &kp LBKT &kp LALT
                  &kp LGUI &kp SPACE &mo 1   &mo 2 &kp LSHFT &mt LS(RET) RET
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC | PG-UP   | LTAB |  UP | RTAB |  HOME |   |  /  |   7  |  8  |  9  |  *  | BKSP |
// |  TAB | PG-DWN  |  LFT | DWN |  RGT |  END  |   |  -  |   4  |  5  |  6  |  +  |   $  |
// | CTRL |         |DesktL| Copy|DesktR| Paste |   |  0  |   1  |  2  |  3  |  =  | ALT  | 
//                         | GUI | SPC  |  ---  |   |  ,  | SHFT |  .  |
                        bindings = <
   &kp ESC    &kp PG_UP  &kp LC(LS(TAB)) &kp UP    &kp LC(TAB)    &kp HOME         &kp LS(N7) &kp N7   &kp N8 &kp N9   &mt INT3 LS(RBKT) &mt LA(BSPC) BSPC 
   &kp TAB    &kp PG_DN  &kp LEFT        &kp DOWN  &kp RIGHT      &kp END          &kp FSLH   &kp N4   &kp N5 &kp N6   &kp RBKT     &kp LS(N4)
   &kp LCTRL  &none      &kp LC(LEFT)    &td0      &kp LC(RIGHT)  &kp LG(V)        &kp N0     &kp N1   &kp N2 &kp N3   &kp LS(N0)   &kp LALT
                          	             &kp LGUI  &kp SPACE      &none            &kp COMMA  &kp LSHFT  &kp DOT
                        >;
                }; 

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC   |  !  |  ?  |  "  |   '  |     |   |  [  |  ]   |  <  |  >  | "|" | BKSP |
// |  TAB   |     |     |     |      |     |   |  (  |  )   |  /  |  \  |  #  |      |
// | BT_CLR | BT0 | BT1 | BT2 | BT3  | BT4 |   |  {  |  }   |   ^?  |   ^?| ^?  |   ^? |
//                      | GUI |      | SPC |   |     | SHFT | RET |
                        bindings = <
   &kp ESC    &kp LS(N1)   &kp LS(MINUS) &mt LS(BSLH) LS(N2)   &kp TILDE    &none    &kp RA(N5) &kp RA(N6) &kp GRAVE  &kp TILDE           &kp LA(7)   &mt LA(BSPC) BSPC
   &kp TAB    &kp RA(Q)    &trans        &trans            &trans       &trans       &kp LS(N8) &kp LS(N9) &kp LS(N7) &kp LS(RA(N7))  &kp BSLH    &kp LS(BSLH)
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4 &kp RA(N8) &kp RA(N9) &kp INT4   &kp INT3        &kp INT2      &kp INT1
                    	     &kp LGUI     &kp SPACE      &trans       &trans      &kp LSHFT &kp RET
                        >;
                };
        } ;
};